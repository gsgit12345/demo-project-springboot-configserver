#spring.datasource.url=jdbc:mysql://mysql.default.svc.cluster.local:30007/Employee?useUnicode=yes&characterEncoding=UTF-8&characterSetResult=UTF-8
#10.43.255.253
#spring.datasource.username=root
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
#spring.datasource.password=root
#spring.datasource.dialect=org.hibernate.dialect.MySQL8Dialect
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
#spring.jpa.hibernate.ddl-auto=update
#spring.datasource.url=jdbc:mysql://localhost:3306/db?createDatabaseIfNotExist=true
#spring.datasource.username=root  //your db user name
#spring.datasource.password=root  //your db user password
#spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
#spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
#If your MySql version 5 then use MySQL5Dialect
# Enable spring data repos
#spring.data.jpa.repositories.enabled=true
#spring.jpa.show-sql=true
#spring.jpa.database=mysql
#eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
##in below username:eureka and password is:password .enabling basic auth in eureka server
#eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka
#spring.application.name=config-service
#server.port=8087
#configuring zipkin server in microservices
#spring.zipkin.base-url=http://localhost:9411
#spring.sleuth.sampler-probability=1.0
##############################config server configuration===================
spring.application.name=config-service
server.port=8888
########git base configuration  =====================
spring.cloud.config.server.git.uri=https://github.com/gsgit12345/microservices-config-repo.git
spring.cloud.config.server.git.default-label=origin/release/0.1
#spring.cloud.config.server.git.username = USER NAME HERE
#spring.cloud.config.server.git.password = PASSWORD HERE
spring.cloud.config.server.git.clone-on-start=true

#uncomment below configuration when config server is going to be implemented using local file.
#spring.profiles.active=native
#spring.cloud.config.server.native.search-locations=classpath:/common-config
